/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.*;
import Model.*;
import java.awt.EventQueue;
import java.awt.event.KeyEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;

public class AuthorForm extends javax.swing.JFrame {

    AddNewBookForm addNewBookForm;
    ArrayList<Author> arrAuthorAvailable;

    /**
     * Creates new form AuthorForm
     */
    public AuthorForm(AddNewBookForm addNewBookForm) {
        initComponents();
        this.addNewBookForm = addNewBookForm;
        setLocationRelativeTo(this);
        try {
            arrAuthorAvailable = Author_Controller.getInstance().getListAuthor();
            initListAuthor(arrAuthorAvailable);
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AuthorForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AuthorForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tfNameAuthor = new javax.swing.JTextField();
        btnAddAuthor = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnOk = new javax.swing.JButton();
        btnDeleteAuthor = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAuthor = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        listAuthorAvailable = new javax.swing.JList<>();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        tfNameAuthor.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                tfNameAuthorKeyPressed(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNameAuthorKeyTyped(evt);
            }
        });

        btnAddAuthor.setText("Thêm");
        btnAddAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAuthorActionPerformed(evt);
            }
        });

        jLabel1.setText("Tên tác giả ");

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        btnDeleteAuthor.setText("Xóa");
        btnDeleteAuthor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteAuthorActionPerformed(evt);
            }
        });

        tableAuthor.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã tác giả", "Tên tác giả"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAuthor);
        if (tableAuthor.getColumnModel().getColumnCount() > 0) {
            tableAuthor.getColumnModel().getColumn(0).setPreferredWidth(30);
            tableAuthor.getColumnModel().getColumn(1).setPreferredWidth(70);
        }

        jScrollPane2.setViewportView(listAuthorAvailable);

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfNameAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(34, 34, 34)
                        .addComponent(btnAddAuthor))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(btnDeleteAuthor)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(tfNameAuthor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAddAuthor)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(jButton1)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnOk)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(btnDeleteAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnAddAuthor, tfNameAuthor});

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tfNameAuthorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameAuthorKeyPressed
        // TODO add your handling code here:
        switch (evt.getKeyCode()) {
            case KeyEvent.VK_BACK_SPACE:
                break;
            case KeyEvent.VK_ENTER:
//                tfNameAuthor.setText(tfNameAuthor.getText());
                autoComplete(tfNameAuthor.getText());
                break;
            default:
                EventQueue.invokeLater(new Runnable() {
                    @Override
                    public void run() {
                        String kt = tfNameAuthor.getText();
                        autoComplete(kt);
                    }
                });
        }
    }//GEN-LAST:event_tfNameAuthorKeyPressed

    private void btnAddAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAuthorActionPerformed
        // TODO add your handling code here:
        if (arrListAuthor.isEmpty() && !tfNameAuthor.getText().trim().isEmpty()) {
            String nameAuthor = tfNameAuthor.getText().trim();
            DefaultTableModel model = (DefaultTableModel) tableAuthor.getModel();
            model.addRow(new Object[]{
                "",
                nameAuthor
            });
        }
    }//GEN-LAST:event_btnAddAuthorActionPerformed

    private void tfNameAuthorKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNameAuthorKeyTyped
        // TODO add your handling code here:
        if (tfNameAuthor.getText().isEmpty()) {
            initListAuthor(arrAuthorAvailable);
        }
        autoComplete(tfNameAuthor.getText());
    }//GEN-LAST:event_tfNameAuthorKeyTyped

    private void btnDeleteAuthorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteAuthorActionPerformed
        // TODO add your handling code here:
        int i = tableAuthor.getSelectedRow();
        if (i != -1) {
            ((DefaultTableModel) tableAuthor.getModel()).removeRow(i);
        }
    }//GEN-LAST:event_btnDeleteAuthorActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        int i = listAuthorAvailable.getSelectedIndex();
        DefaultTableModel model = (DefaultTableModel) tableAuthor.getModel();
        if (arrListAuthor.isEmpty()){
           return;
        }
        model.addRow(new Object[]{
            arrListAuthor.get(i).getauthor_ID(),
            arrListAuthor.get(i).getauthor_Name()
        });
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        addAuthor();
    }//GEN-LAST:event_btnOkActionPerformed

    ArrayList<Author> arrListAuthor;
    /**
     * Hàm này thực hiện chức năng hiển thị danh sách tên các tác giả lên list
     * @param ArrayList<Author> Danh sách các tác giả hiển thị lên list
     */
    private void initListAuthor(ArrayList<Author> arr) {
        arrListAuthor = arr;
        DefaultListModel listModel = new DefaultListModel();
        for (int i = 0; i < arrListAuthor.size(); i++) {
            listModel.addElement(arrListAuthor.get(i).getauthor_Name());
        }
        listAuthorAvailable.setModel(listModel);
    }

    /**
     * Hàm này thực hiện chức năng tìm các tác giả có tên bắt đầu bằng một chuỗi kí tự nào đó
     * @param String chỗi kí tự bắt đầu của tác giả
     */
    private void autoComplete(String kt) {
        String complete = "";
        int start = kt.length();
        int last = kt.length();
        int i;
        ArrayList<Author> arr = new ArrayList<>();
        for (i = 0; i < arrAuthorAvailable.size(); i++) {
            if (arrAuthorAvailable.get(i).getauthor_Name().startsWith(kt)) {
                arr.add(arrAuthorAvailable.get(i));
            }
        }
        initListAuthor(arr);
    }
    
    /**
     * Hàm này thực hiện chức năng thêm các tác giả cho sách muốn thêm vào
     */
    private void addAuthor(){
        ArrayList<Author> arr = new ArrayList<>();
        for (int row = 0;row <tableAuthor.getRowCount();row++){
            String idAuthor = (tableAuthor.getValueAt(row,0)=="")?null:(String)tableAuthor.getValueAt(row, 0);
            String nameAuthor =(String)tableAuthor.getValueAt(row, 1);
            arr.add(new Author(idAuthor, nameAuthor));
        }
        addNewBookForm.setListAuthor(arr);
        this.dispose();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddAuthor;
    private javax.swing.JButton btnDeleteAuthor;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> listAuthorAvailable;
    private javax.swing.JTable tableAuthor;
    private javax.swing.JTextField tfNameAuthor;
    // End of variables declaration//GEN-END:variables
}

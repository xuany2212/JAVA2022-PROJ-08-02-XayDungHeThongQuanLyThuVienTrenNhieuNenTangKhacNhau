/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.*;
import Model.*;
import View.*;
import java.awt.event.KeyEvent;
import java.awt.Point;
import java.awt.Toolkit;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;

public class AddCoppyOfBookForm extends javax.swing.JPanel {

    /**
     * Creates new form panelThemBanSaoSachDaCo
     */
    Book book;
    boolean canAdd = false;
    MainFormOfLibrarian mainFormOfLibrarian;
    
    ////Them ban sao sach da co
    public AddCoppyOfBookForm(MainFormOfLibrarian mainFormOfLibrarian) {
        initComponents();
        this.mainFormOfLibrarian = mainFormOfLibrarian;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbReference = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        tfIdBook = new javax.swing.JTextField();
        btnOk = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        lbNameBook = new javax.swing.JLabel();
        lbPublishingCopany = new javax.swing.JLabel();
        lbAuthor = new javax.swing.JLabel();
        lbISBN = new javax.swing.JLabel();
        lbNumberOfCoppy = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        tfNumberOfCoppy = new javax.swing.JTextField();
        tfPrice = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        cbTypeOfCoppy = new javax.swing.JComboBox<>();
        btnAddCoppyBook = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableAddCoppyOfNewBook = new javax.swing.JTable();
        lbTitleTable = new javax.swing.JLabel();
        btnSave = new javax.swing.JButton();
        btnCancel = new javax.swing.JButton();

        cbReference.setText("jCheckBox1");

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        jLabel1.setText("Nhập mã sách :");

        btnOk.setText("Ok");
        btnOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOkActionPerformed(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Thông tin sách"));

        lbNameBook.setText("Tiêu đề : ");

        lbPublishingCopany.setText("Nhà phát hành : ");

        lbAuthor.setText("Tác giả");

        lbISBN.setText("ISBN");

        lbNumberOfCoppy.setText("Số lượng bản sao hiện có");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbNameBook, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbPublishingCopany, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbAuthor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbISBN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbNumberOfCoppy, javax.swing.GroupLayout.DEFAULT_SIZE, 323, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lbNameBook, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbPublishingCopany)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbAuthor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbISBN)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbNumberOfCoppy)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lbAuthor, lbISBN, lbNameBook, lbNumberOfCoppy, lbPublishingCopany});

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Thêm bản sao sách"));

        jLabel7.setText("Số lượng bản sao ");

        jLabel8.setText("Loại Sách");

        jLabel9.setText("Giá ");

        tfNumberOfCoppy.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfNumberOfCoppyKeyTyped(evt);
            }
        });

        tfPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                tfPriceKeyTyped(evt);
            }
        });

        jLabel11.setText("VNĐ");

        cbTypeOfCoppy.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cho mượn", "Tham khảo" }));

        btnAddCoppyBook.setText("Thêm");
        btnAddCoppyBook.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddCoppyBookActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfNumberOfCoppy, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cbTypeOfCoppy, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfPrice)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel11)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addComponent(btnAddCoppyBook)
                .addContainerGap())
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel7, jLabel8, jLabel9});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfNumberOfCoppy)
                    .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, 26, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(cbTypeOfCoppy, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddCoppyBook))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(tfPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {cbTypeOfCoppy, jLabel7, jLabel8, jLabel9, tfNumberOfCoppy, tfPrice});

        tableAddCoppyOfNewBook.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Mã Bản Sao", "Số hiệu bản sao", "Tham khảo", "Cho mượn", "Giá"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Boolean.class, java.lang.Boolean.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tableAddCoppyOfNewBook);

        lbTitleTable.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        lbTitleTable.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbTitleTable.setText("Thông Tin Bản Sao");

        btnSave.setText("Lưu");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnCancel.setText("Thoát");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(tfIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                        .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 619, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(lbTitleTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnCancel, btnSave});

        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(5, 5, 5)
                        .addComponent(lbTitleTable, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(tfIdBook, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(btnOk, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSave, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(4, 4, 4))
        );

        layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnCancel, btnSave});

    }// </editor-fold>//GEN-END:initComponents

    private void btnOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOkActionPerformed
        // TODO add your handling code here:
        if (tfIdBook.getText() != null) {
            try {
                showInforBook(tfIdBook.getText());
                displayTableCoppyOfBook(tfIdBook.getText());
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(AddCoppyOfBookForm.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(AddCoppyOfBookForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        canAdd = false;
    }//GEN-LAST:event_btnOkActionPerformed

    private void btnAddCoppyBookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddCoppyBookActionPerformed
        // TODO add your handling code here:
        try {
            displayCoppyToAdd(this.book);
            canAdd = true;
        } catch (Exception e) {
        }
    }//GEN-LAST:event_btnAddCoppyBookActionPerformed

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        // TODO add your handling code here:
        mainFormOfLibrarian.setContentsPanel(0);
    }//GEN-LAST:event_btnCancelActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        try {
            // TODO add your handling code here:
            addCoppyOfBookByIdBook();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(AddCoppyOfBookForm.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(AddCoppyOfBookForm.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void tfNumberOfCoppyKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfNumberOfCoppyKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() > KeyEvent.VK_9 || evt.getKeyChar() < KeyEvent.VK_0) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tfNumberOfCoppyKeyTyped

    private void tfPriceKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tfPriceKeyTyped
        // TODO add your handling code here:
        if (evt.getKeyChar() > KeyEvent.VK_9 || evt.getKeyChar() < KeyEvent.VK_0) {
            Toolkit.getDefaultToolkit().beep();
            evt.consume();
        }
    }//GEN-LAST:event_tfPriceKeyTyped
    
    /**
     * Hàm này thực hiện chức năng thêm danh sach các bản sao của một sách
     * @param book cuốn sách muốn thêm bản sao
     * @throws ClassNotFoundException
     * @throws SQLException
     * @see ClassNotFoundException
     * @see SQLException
     */
    private void addCoppyOfBookByIdBook() throws ClassNotFoundException, SQLException{
        if (canAdd){
            CopyOfBook copyOfBook = new CopyOfBook();
            for (int i = 0;i<tableAddCoppyOfNewBook.getRowCount();i++){
                copyOfBook.setcopy_of_book_ID((String) tableAddCoppyOfNewBook.getValueAt(i, 0));
                copyOfBook.setcopy_of_book_Num_Of_Copy((String) tableAddCoppyOfNewBook.getValueAt(i, 1));
                Book_Controller.getInstance().addCopyOfBookByIdBook(book.getbook_ID(), copyOfBook);
            }
            notify("Đã thêm");
            lbTitleTable.setText("Thông tin bản sao");
            showInforBook(book.getbook_ID());
            displayTableCoppyOfBook(book.getbook_ID());
        } else {
            notify("Lỗi .....");
        }
    }
    
    /**
     * Hàm này thực hiện chức năng hiển thị danh sách những bản sao mà muốn thêm
     * vào lên bảng
     * @param book cuốn sách muốn thêm bản sao
     */
    private void displayCoppyToAdd(Book book) {
        lbTitleTable.setText("Danh Sách các bản sao yêu cầu thêm");
        DefaultTableModel model = (DefaultTableModel) tableAddCoppyOfNewBook.getModel();
        model.setRowCount(0);
        int numberOfCoppy = Integer.parseInt(tfNumberOfCoppy.getText().toString());
        int price = Integer.parseInt(tfPrice.getText().toString());
        for (int i = 0; i < numberOfCoppy; i++) {
            boolean isReference = false;
            if (cbTypeOfCoppy.getSelectedIndex() == 0){
                isReference = false;
            } else {
                isReference = true;
            }
            model.addRow(new Object[]{
                BookHelper.getNewIdCoppyOfBook(book,Integer.toString(i+1)),
                BookHelper.getNewNumberCoppyOfBook(book,Integer.toString(i+1)),
                isReference,
                !isReference,
                price
            });
        }
        tableAddCoppyOfNewBook.setModel(model);
    }
    
    /**
     * Hàm này thực hiện chức năng hiển thị thông tin những bản sao của một cuốn
     * sách lên bảng
     * @param idBook max cuốn sách muốn hiển thị thông tin các bản sao
     * @throws ClassNotFoundException
     * @throws SQLException
     * @see ClassNotFoundException
     * @see SQLException
     */
    private void displayTableCoppyOfBook(String idBook) throws ClassNotFoundException, SQLException {
        lbTitleTable.setText("Thông tin Bản sao");
        book = Book_Controller.getInstance().getBookByIdBook(idBook);
        ArrayList<CopyOfBook> copyOfBooks = book.getbook_ListofCopy();
        DefaultTableModel model = (DefaultTableModel) tableAddCoppyOfNewBook.getModel();
        model.setRowCount(0);
        for (int i = 0; i < copyOfBooks.size(); i++) {
            boolean isReference = true ;

            model.addRow(new Object[]{
                copyOfBooks.get(i).getcopy_of_book_ID(),
                copyOfBooks.get(i).getcopy_of_book_Num_Of_Copy(),
                isReference,
                !isReference,
            });
        }
        tableAddCoppyOfNewBook.setModel(model);
    }

    /**
     * Hàm này thực hiện chức năng hiển thị thông tin một cuốn sách
     * @param idBook cuốn sách muốn hiển thị thông tin
     * @throws ClassNotFoundException
     * @throws SQLException
     * @see ClassNotFoundException
     * @see SQLException
     */
    private void showInforBook(String idBook) throws ClassNotFoundException, SQLException {
        book = Book_Controller.getInstance().getBookByIdBook(idBook);
        if (book == null){
            notify("Không có dữ liệu thỏa mãn");
        }
        lbNameBook.setText("Tiêu đề: " + book.getbook_Title());
        lbAuthor.setText("Tác Giả: " + book.getbook_Author());
        lbPublishingCopany.setText("Nhà phát hành: " + book.getbook_Publisher().getpublisher_Name());
        lbNumberOfCoppy.setText("Số bản sao hiện có: " + book.getbook_ListofCopy().size());
    }

    /**
     * Hàm này thực hiện chức năng hiển thị lên một thông báo
     * @param content nội dung thông báo
     */
    private void notify(String content) {
        JOptionPane.showMessageDialog(null, content);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddCoppyBook;
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnOk;
    private javax.swing.JButton btnSave;
    private javax.swing.JCheckBox cbReference;
    private javax.swing.JComboBox<String> cbTypeOfCoppy;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbAuthor;
    private javax.swing.JLabel lbISBN;
    private javax.swing.JLabel lbNameBook;
    private javax.swing.JLabel lbNumberOfCoppy;
    private javax.swing.JLabel lbPublishingCopany;
    private javax.swing.JLabel lbTitleTable;
    private javax.swing.JTable tableAddCoppyOfNewBook;
    private javax.swing.JTextField tfIdBook;
    private javax.swing.JTextField tfNumberOfCoppy;
    private javax.swing.JTextField tfPrice;
    // End of variables declaration//GEN-END:variables

}
